====================================================================

# config.yaml
name: flutterkaigi
issueTracker: 'https://github.com/lllttt06/flutter_kaigi_2024/issues'
version: 0.0.1
materialIconCodePoint: '0xe0b1'
requiresConnection: true

====================================================================

flutter run -d chrome --dart-define=use_simulated_environment=true

====================================================================

// packages/devtools_ext/lib/main.dart
class MyToolsExtension extends StatelessWidget {
  const MyToolsExtension({super.key});
  @override
  Widget build(BuildContext context) {
    return const DevToolsExtension(child: Placeholder());
  }
}

====================================================================

class LoadingStateToggle extends HookWidget {
  const LoadingStateToggle({super.key});

  @override
  Widget build(BuildContext context) {
    final enabled = useState(false);
    return Column(
      children: [
        SwitchListTile(
          title: const Text('Loading State Toggle'),
          value: enabled.value,
          onChanged: (value) async {
            enabled.value = value;
          },
        ),
      ],
    );
  }
}

====================================================================

Future<bool> fetchLoadingState() async {
  final result = await serviceManager
      .callServiceExtensionOnMainIsolate('ext.loadingState.fetch');
  return result.json?['loading'] as bool;
}

Future<void> updateLoadingState({required bool isLoading}) async {
  await serviceManager.callServiceExtensionOnMainIsolate(
    'ext.loadingState.update',
    args: {'loading': isLoading},
  );
}

====================================================================

onChanged: (value) async {
  await updateLoadingState(isLoading: value);
  enabled.value = await fetchLoadingState();
},

====================================================================
